package com.tay.freshnews.adapter;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.LinearLayout;
import android.widget.SectionIndexer;
import android.widget.TextView;

import com.tay.freshnews.R;
import com.tay.freshnews.pojo.Contact;

import org.apache.commons.lang3.StringUtils;

import java.util.List;

public class PhoneContactAdapter extends ArrayAdapter<Contact> {

    private int layout;

    private SectionIndexer mIndexer;

    public PhoneContactAdapter(Context context, int resource, List<Contact> objects) {
        super(context, resource, objects);
        this.layout = resource;
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent) {
        ViewHolder mHolder = null;
        if (convertView == null) {
            convertView = LayoutInflater.from(getContext()).inflate(this.layout, null);
            mHolder = new ViewHolder();
            mHolder.sortKeyLayout = (LinearLayout) convertView.findViewById(R.id.sort_key_layout);
            mHolder.sortKey = (TextView) convertView.findViewById(R.id.sort_key);
            mHolder.name = (TextView) convertView.findViewById(R.id.name);
            mHolder.phone = (TextView) convertView.findViewById(R.id.contact_number);
            mHolder.email = (TextView) convertView.findViewById(R.id.contact_email);
            convertView.setTag(mHolder);
        } else {
            mHolder = (ViewHolder)convertView.getTag();
        }
        setViewData(mHolder,position);
        return convertView;
    }


    private void setViewData(ViewHolder mHolder,int position) {
        Contact contact = getItem(position);
        mHolder.name.setText(contact.getName());
        int section = mIndexer.getSectionForPosition(position);
        if (position == mIndexer.getPositionForSection(section)) {
            mHolder.sortKey.setText(contact.getSortKey());
            mHolder.sortKeyLayout.setVisibility(View.VISIBLE);
        } else {
            mHolder.sortKeyLayout.setVisibility(View.GONE);
        }
        if (contact.getPhoneList() == null) {
            mHolder.phone.setVisibility(View.GONE);
        } else {
            mHolder.phone.setVisibility(View.VISIBLE);
            mHolder.phone.setText(StringUtils.join(contact.getPhoneList().iterator(), " / "));
        }
        if (contact.getEmailList() == null) {
            mHolder.email.setVisibility(View.GONE);
        } else {
            mHolder.email.setVisibility(View.VISIBLE);
            mHolder.email.setText(StringUtils.join(contact.getEmailList().iterator(), " / "));
        }
    }

    /**
     * 给当前适配器传入一个分组工具。
     *
     * @param indexer
     */
    public void setIndexer(SectionIndexer indexer) {
        mIndexer = indexer;
    }

    class ViewHolder {
        LinearLayout sortKeyLayout;
        TextView sortKey;
        TextView name;
        TextView phone;
        TextView email;
    }

}
